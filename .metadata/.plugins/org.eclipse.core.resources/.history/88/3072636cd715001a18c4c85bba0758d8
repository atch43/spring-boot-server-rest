package it.project.server.model;

import java.util.Collection;
import java.util.List;

import org.springframework.security.core.Authentication;
import org.springframework.security.core.GrantedAuthority;

public class AuthUser implements Authentication
{  
	
	private Integer id;
	
	private String username;
 
    private String password;
    
    private String token;
	
	private List<Privilege> privileges;
	
	


	
	public AuthUser() {
		
	}
	public AuthUser(String username, String password, String token){
		this.username = username;
		this.password = password;
		this.token = token;
	}
	
	

public String getUsername() {
	return username;
}
public void setUsername(String username) {
	this.username = username;
}
	
    public String getPassword() {
		return password;
	}
    public void setPassword(String password) {
		this.password = password;
	}
	@Override
	public String getName() {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public Collection<? extends GrantedAuthority> getAuthorities() {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public Object getCredentials() {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public Object getDetails() {
		// TODO Auto-generated method stub
		return this.getName();
	}
	@Override
	public Object getPrincipal() {
		return this.email;
	}
	@Override
	public boolean isAuthenticated() {
		return false;
	}
	@Override
	public void setAuthenticated(boolean isAuthenticated) throws IllegalArgumentException {
		
	}
	
	public List<Privilege> getPrivileges() {
		return privileges;
	}
	public void setPrivileges(List<Privilege> privileges) {
		this.privileges = privileges;
	}
    
}
